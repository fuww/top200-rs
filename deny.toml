# This template contains all of the possible sections and their default values

# If 1 or more target triples (and optionally, target_features) are specified,
# only the specified targets will be checked when running `cargo deny check`.
[graph]
targets = [
    # The triple can be any string, but only the target triples built in to
    # rustc (as of 1.40) can be checked against actual config expressions
    #{ triple = "x86_64-unknown-linux-musl" },
    # You can also specify which target_features you promise are enabled for a
    # particular target. target_features are currently not validated against
    # the actual valid features supported by the target architecture.
    #{ triple = "wasm32-unknown-unknown", features = ["atomics"] },
]

# This section is considered when running `cargo deny check advisories`
# More documentation for the advisories section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html
[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"
# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]

# Advisory-related configuration
[advisories.severity]
vulnerability = "deny"
unmaintained = "warn"
yanked = "warn"
notice = "warn"

# A list of advisory IDs to ignore. Note that ignored advisories will still
# output a note when they are encountered.
ignore = [
]

# This section is considered when running `cargo deny check licenses`
# More documentation for the licenses section can be found here:
# https://embarkstudios.github.io/cargo-deny/checks/licenses/cfg.html
[licenses]
unlicensed = "deny"
copyleft = "deny"
default = "deny"
confidence-threshold = 0.8

# List of explicitly allowed licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSL-1.0",
    # @edulix: The followinglicenses are disabled just to remove the warning
    # that no dependency is being detected to use it, but it's a license we are
    # legally compatible with:
    # "CC0-1.0",
    # "LGPL-3.0", 
    "BSD-3-Clause",
    "Unicode-DFS-2016"
]

# List of explicitly disallowed licenses
deny = [
    #"Nokia",
]

[licenses.private]
ignore = false
registries = [
    #"https://sekretz.com/registry
]

# Allow 1 or more licenses on a per-crate basis
exceptions = [
    # @edulix: Actually these two packages are alternatively licensed, so even 
    # if cargo deny detects them as GPL AND LGPL, it's GPL OR LGPL. And we allow
    # LGPL. That's why they are added here as exceptions.
    { allow = ["GPL-3.0", "LGPL-3.0"], name = "rug", version = "*" },
    { allow = ["GPL-3.0", "LGPL-3.0"], name = "gmp-mpfr-sys", version = "*" },
    # This is our own package, so we don't mind its license :-)
    { allow = ["AGPL-3.0"], name = "strand" }
]

# This section is considered when running `cargo deny check bans`.
[bans]
multiple-versions = "warn"
wildcards = "allow"
highlight = "all"
allow = []
deny = []
skip = []
skip-tree = []

# This section is considered when running `cargo deny check sources`.
[sources]
unknown-registry = "warn"
unknown-git = "warn"